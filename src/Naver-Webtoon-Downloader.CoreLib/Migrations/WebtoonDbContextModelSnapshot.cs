// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaverWebtoonDownloader.CoreLib.Database;

namespace NaverWebtoonDownloader.CoreLib.Migrations
{
    [DbContext(typeof(WebtoonDbContext))]
    partial class WebtoonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Episode", b =>
                {
                    b.Property<long>("WebtoonID")
                        .HasColumnType("INTEGER");

                    b.Property<long>("No")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("WebtoonID", "No");

                    b.HasIndex("WebtoonID");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Image", b =>
                {
                    b.Property<long>("WebtoonID")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EpisodeNo")
                        .HasColumnType("INTEGER");

                    b.Property<long>("No")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDownloaded")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("WebtoonID", "EpisodeNo", "No");

                    b.HasIndex("EpisodeNo");

                    b.HasIndex("WebtoonID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Webtoon", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Writer")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Webtoons");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Episode", b =>
                {
                    b.HasOne("NaverWebtoonDownloader.CoreLib.Database.Webtoon", "Webtoon")
                        .WithMany("Episodes")
                        .HasForeignKey("WebtoonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Webtoon");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Image", b =>
                {
                    b.HasOne("NaverWebtoonDownloader.CoreLib.Database.Webtoon", "Webtoon")
                        .WithMany()
                        .HasForeignKey("WebtoonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaverWebtoonDownloader.CoreLib.Database.Episode", "Episode")
                        .WithMany("Images")
                        .HasForeignKey("WebtoonID", "EpisodeNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Episode");

                    b.Navigation("Webtoon");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Episode", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("NaverWebtoonDownloader.CoreLib.Database.Webtoon", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
